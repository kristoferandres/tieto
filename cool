#!/bin/bash

# Update package repository
sudo apt update

# Upgrade installed packages
sudo apt upgrade -y

# Install Nginx and OpenSSL
sudo apt install nginx openssl -y

# Secure Nginx installation with admin user and password
sudo htpasswd -c /etc/nginx/.htpasswd admin
sudo mv /etc/nginx/sites-available/default /etc/nginx/sites-available/default.backup
sudo touch /etc/nginx/sites-available/default
sudo sh -c "cat >/etc/nginx/sites-available/default" <<-EOF
server {
        listen 80 default_server;
        listen [::]:80 default_server;
        server_name _;
        return 301 https://\$host\$request_uri;
}

server {
        listen 443 ssl http2 default_server;
        listen [::]:443 ssl http2 default_server;
        server_name _;

        root /var/www/html;
        index index.html index.htm index.nginx-debian.html;

        ssl_certificate /etc/nginx/ssl/server.crt;
        ssl_certificate_key /etc/nginx/ssl/server.key;

        location / {
                try_files \$uri \$uri/ =404;
        }

        location /admin {
                auth_basic "Restricted Access";
                auth_basic_user_file /etc/nginx/.htpasswd;
                try_files \$uri \$uri/ =404;
        }
}
EOF

# Generate SSL certificate
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
-keyout /etc/nginx/ssl/server.key \
-out /etc/nginx/ssl/server.crt \
-subj "/C=US/ST=New York/L=New York City/O=Example Company/OU=IT Department/CN=example.com"

# Restart Nginx service
sudo systemctl restart nginx

# Check Nginx status
sudo systemctl status nginx


# Update package lists
sudo apt-get update

# Install Nginx
sudo apt-get install nginx -y

# Secure Nginx installation
sudo ufw allow 'Nginx Full'
sudo ufw enable

# Install MariaDB (MySQL)
sudo apt-get install mariadb-server -y

# Configure MariaDB (MySQL)
sudo mysql_secure_installation
# Follow the prompts and set the desired options, leaving the root password blank

# Install PHP and necessary extensions
sudo apt-get install php7.4-fpm php7.4-mysql -y

# Configure PHP-FPM
sudo nano /etc/php/7.4/fpm/pool.d/www.conf
# Edit the configuration file to set the desired PHP-FPM settings

# Configure Nginx server block for PHP
sudo nano /etc/nginx/sites-available/default
# Edit the Nginx server block configuration to pass PHP requests to PHP-FPM

# Enable SSL (HTTPS) in Nginx
sudo mkdir /etc/nginx/ssl
sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /etc/nginx/ssl/nginx.key -out /etc/nginx/ssl/nginx.crt
# Follow the prompts to generate a self-signed SSL certificate
# Set the SSL certificate paths in the Nginx configuration
sudo sed -i 's|# SSL Certificate paths|ssl_certificate /etc/nginx/ssl/nginx.crt;|' /etc/nginx/sites-available/default
sudo sed -i 's|# SSL Key File paths|ssl_certificate_key /etc/nginx/ssl/nginx.key;|' /etc/nginx/sites-available/default

# Update Nginx configuration for SSL
sudo nano /etc/nginx/sites-available/default
# Edit the Nginx server block configuration to enable HTTPS

# Enable Nginx server block
sudo ln -s /etc/nginx/sites-available/default /etc/nginx/sites-enabled/

# Restart Nginx and PHP-FPM
sudo systemctl restart nginx
sudo systemctl restart php7.4-fpm

# Install phpMyAdmin
sudo apt-get install phpmyadmin -y

# Set phpMyAdmin admin password
sudo mysql -u root -e "USE mysql; UPDATE user SET plugin='mysql_native_password', authentication_string=PASSWORD('admin') WHERE User='phpmyadmin'; FLUSH PRIVILEGES;"

# Configure phpMyAdmin access
sudo nano /etc/nginx/sites-available/phpmyadmin
# Create an Nginx server block for phpMyAdmin and configure the desired access settings

# Enable phpMyAdmin server block
sudo ln -s /etc/nginx/sites-available/phpmyadmin /etc/nginx/sites-enabled/

# Restart Nginx
sudo systemctl restart nginx
